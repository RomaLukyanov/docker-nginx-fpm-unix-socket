# версия синтаксиса
version: '3'

# в этом блоке мы описываем контейнеры, которые будут запускаться
services:
  #контейнер с Nginx
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: webserver
    # проброс портов
    ports:
      - "80:80"
    volumes:
       - ./code:/data/mysite.local
       - ./socket:/var/run/php/

    networks:
      - app-network
  #контейнер с MySql
  mysql:
    build:
      context: ./mysql
      dockerfile: Dockerfile
    image: myapp/mysql
    container_name: db
    volumes:
       - ./db:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app-network
    environment:
      MYSQL_ROOT_USER: "root"
      MYSQL_ROOT_PASSWORD: "123"
      MYSQL_HOST: "127.0.0.1"
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    restart: always


  #Контейнер с PHP-FPM, назовём его app
  app:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: myapp/php # имя будущего образа
    container_name: app # имя контейнера после запуска
    volumes:
       - ./code:/data/mysite.local
       - ./socket:/var/run/php/
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network
    depends_on:
      - mysql
      - nginx
  reddis:
    # Если нет секции build, то система будет искать образ в репозиториях
    build:
      context: ./reddis
      dockerfile: Dockerfile
    image: myapp/reddis # имя будущего образа
    container_name: reddis # имя контейнера после запуска
    environment: 
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "6379:6379"
    # мы можем создать для контейнеров внутреннюю сеть
    networks:
      - app-network
  memcached:
    build:
      context: ./memcached
      dockerfile: Dockerfile
    image: myapp/memcached
    container_name: memcached
    ports:
      - "11211:11211"
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

volumes:
  phpsocket: 